object ponder {
  def digitsOf(m: Int) = m.toString.map(_.asDigit).toList
                                                  //> digitsOf: (m: Int)List[Int]
  val candidateMs = 555 to 5555 flatMap (x => List(x * 180 + 54, x * 180 - 54)) filter (m => digitsOf(m).distinct.size == 6)
                                                  //> candidateMs  : scala.collection.immutable.IndexedSeq[Int] = Vector(102654, 1
                                                  //| 02546, 102834, 103986, 104526, 105246, 105426, 105894, 105786, 106254, 10679
                                                  //| 4, 106974, 107694, 107586, 107946, 108234, 108594, 108954, 109386, 109674, 1
                                                  //| 09854, 109746, 120654, 120546, 120834, 123894, 123786, 124506, 125046, 12540
                                                  //| 6, 125694, 125874, 126054, 125946, 126594, 126954, 127386, 127854, 128034, 1
                                                  //| 28394, 128574, 128754, 128934, 129654, 129546, 129834, 130986, 132894, 13278
                                                  //| 6, 134586, 135486, 135846, 136854, 137286, 137826, 138294, 138654, 138546, 1
                                                  //| 38726, 138906, 139086, 139806, 140526, 142506, 143586, 145026, 145206, 14538
                                                  //| 6, 145926, 147906, 149526, 149706, 150246, 150426, 150894, 150786, 152046, 1
                                                  //| 52406, 152694, 152874, 152946, 153486, 153846, 154026, 154206, 154386, 15492
                                                  //| 6, 156294, 156834, 157086, 157806, 158094, 157986, 158274, 158346, 158634, 1
                                                  //| 58706, 159246, 159426, 159786, 160254, 160794, 160974, 162054, 162594, 16295
                                                  //| 4, 163854, 165294, 16583
                                                  //| Output exceeds cutoff limit.
  val candidateNs = 5 to 55 flatMap (x => List(x * 180 + 18, x * 180 - 18)) filter (n => digitsOf(n).distinct.size == 4)
                                                  //> candidateNs  : scala.collection.immutable.IndexedSeq[Int] = Vector(1098, 106
                                                  //| 2, 1278, 1458, 1638, 1602, 1782, 1962, 2178, 2358, 2538, 2718, 3078, 3042, 3
                                                  //| 258, 3402, 3618, 3582, 3798, 3762, 3978, 3942, 4158, 4302, 4518, 4698, 5238,
                                                  //|  5418, 5382, 5742, 6138, 6102, 6318, 6498, 7038, 7218, 7182, 7398, 7362, 754
                                                  //| 2, 7938, 7902, 9018, 9162, 9378, 9342, 9738, 9702)

  candidateMs.size                                //> res0: Int = 1500
  candidateNs.size                                //> res1: Int = 48

  val solutions = for {
    m <- candidateMs
    n <- candidateNs
    if (digitsOf(m) ++ digitsOf(n)).distinct.size == 10
  } yield (m, n)                                  //> solutions  : scala.collection.immutable.IndexedSeq[(Int, Int)] = Vector((102
                                                  //| 654,3798), (102654,3978), (102654,7398), (102654,7938), (102654,9378), (1026
                                                  //| 54,9738), (102546,3798), (102546,3978), (102546,7398), (102546,7938), (10254
                                                  //| 6,9378), (102546,9738), (103986,5742), (103986,7542), (104526,3798), (104526
                                                  //| ,3978), (104526,7398), (104526,7938), (104526,9378), (104526,9738), (105246,
                                                  //| 3798), (105246,3978), (105246,7398), (105246,7938), (105246,9378), (105246,9
                                                  //| 738), (105426,3798), (105426,3978), (105426,7398), (105426,7938), (105426,93
                                                  //| 78), (105426,9738), (105894,3762), (105894,7362), (105786,3942), (105786,934
                                                  //| 2), (106254,3798), (106254,3978), (106254,7398), (106254,7938), (106254,9378
                                                  //| ), (106254,9738), (106794,2358), (106794,2538), (106794,3258), (106794,3582)
                                                  //| , (106794,5238), (106794,5382), (106974,2358), (106974,2538), (106974,3258),
                                                  //|  (106974,3582), (106974,5238), (106974,5382), (107694,2358), (107694,2538), 
                                                  //| (107694,3258), (107694,3
                                                  //| Output exceeds cutoff limit.

  solutions.size                                  //> res2: Int = 3576
}